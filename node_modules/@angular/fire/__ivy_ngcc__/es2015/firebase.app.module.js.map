{"version":3,"sources":["/home/muhammad/Documents/uniconnects2/uniconnects/node_modules/@angular/fire/es2015/firebase.app.module.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8MAsDE;sDACoD,AAInD;;;;;;;;;;;kCAEmB","file":"firebase.app.module.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar AngularFireModule_1;\nimport { InjectionToken, NgModule, Optional, NgZone, VERSION as NG_VERSION, Version, Inject, PLATFORM_ID } from '@angular/core';\nimport firebase from 'firebase/app';\nexport const FirebaseOptionsToken = new InjectionToken('angularfire2.app.options');\nexport const FirebaseNameOrConfigToken = new InjectionToken('angularfire2.app.nameOrConfig');\nexport const FIREBASE_OPTIONS = FirebaseOptionsToken;\nexport const FIREBASE_APP_NAME = FirebaseNameOrConfigToken;\nexport class FirebaseApp {\n}\nexport const VERSION = new Version('5.4.2');\nexport function _firebaseAppFactory(options, zone, nameOrConfig) {\n    const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n    const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n    config.name = config.name || name;\n    const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0];\n    return (existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config)));\n}\nconst FirebaseAppProvider = {\n    provide: FirebaseApp,\n    useFactory: _firebaseAppFactory,\n    deps: [\n        FIREBASE_OPTIONS,\n        NgZone,\n        [new Optional(), FIREBASE_APP_NAME]\n    ]\n};\nlet AngularFireModule = AngularFireModule_1 = class AngularFireModule {\n    constructor(platformId) {\n        if (firebase.registerVersion) {\n            firebase.registerVersion('angularfire', VERSION.full, platformId.toString());\n            firebase.registerVersion('angular', NG_VERSION.full);\n        }\n    }\n    static initializeApp(options, nameOrConfig) {\n        return {\n            ngModule: AngularFireModule_1,\n            providers: [\n                { provide: FIREBASE_OPTIONS, useValue: options },\n                { provide: FIREBASE_APP_NAME, useValue: nameOrConfig }\n            ]\n        };\n    }\n};\nAngularFireModule = AngularFireModule_1 = __decorate([\n    NgModule({\n        providers: [FirebaseAppProvider],\n    }),\n    __param(0, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [Object])\n], AngularFireModule);\nexport { AngularFireModule };\n"]}