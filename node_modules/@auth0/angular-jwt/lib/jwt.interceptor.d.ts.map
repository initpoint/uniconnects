{"version":3,"file":"jwt.interceptor.d.ts","sources":["/home/muhammad/Documents/uniconnects2/uniconnects/node_modules/@auth0/angular-jwt/lib/jwt.interceptor.d.ts"],"sourcesContent":["import { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { JwtHelperService } from './jwthelper.service';\nimport { Observable } from 'rxjs';\nexport declare class JwtInterceptor implements HttpInterceptor {\n    jwtHelper: JwtHelperService;\n    tokenGetter: () => string | null | Promise<string | null>;\n    headerName: string;\n    authScheme: string;\n    whitelistedDomains: Array<string | RegExp>;\n    blacklistedRoutes: Array<string | RegExp>;\n    throwNoTokenError: boolean;\n    skipWhenExpired: boolean;\n    constructor(config: any, jwtHelper: JwtHelperService);\n    isWhitelistedDomain(request: HttpRequest<any>): boolean;\n    isBlacklistedRoute(request: HttpRequest<any>): boolean;\n    handleInterception(token: string | null, request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;\n}\n"],"names":[],"mappings":"AAAA;;;;AAGA;;;;;;;;;;;;;;;;AAcA;"}