{"version":3,"sources":["/home/muhammad/Documents/uniconnects2/uniconnects/node_modules/@angular/fire/auth/es2015/auth.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6GAqCE;8BAC4B,AAE3B;;;;;;;;;;;;;;;;;;;2DAKiB","file":"auth.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Injectable, Inject, Optional, NgZone, PLATFORM_ID } from '@angular/core';\nimport { Observable, of, from } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { FIREBASE_OPTIONS, FIREBASE_APP_NAME, _firebaseAppFactory, ɵAngularFireSchedulers, ɵkeepUnstableUntilFirstFactory } from '@angular/fire';\nlet AngularFireAuth = class AngularFireAuth {\n    constructor(options, nameOrConfig, platformId, zone) {\n        const keepUnstableUntilFirst = ɵkeepUnstableUntilFirstFactory(new ɵAngularFireSchedulers(zone), platformId);\n        this.auth = zone.runOutsideAngular(() => {\n            const app = _firebaseAppFactory(options, zone, nameOrConfig);\n            return app.auth();\n        });\n        this.authState = new Observable(subscriber => {\n            return zone.runOutsideAngular(() => this.auth.onAuthStateChanged(subscriber));\n        }).pipe(keepUnstableUntilFirst);\n        ;\n        this.user = new Observable(subscriber => {\n            return zone.runOutsideAngular(() => this.auth.onIdTokenChanged(subscriber));\n        }).pipe(keepUnstableUntilFirst);\n        this.idToken = this.user.pipe(switchMap(user => {\n            return user ? from(user.getIdToken()) : of(null);\n        }));\n        this.idTokenResult = this.user.pipe(switchMap(user => {\n            return user ? from(user.getIdTokenResult()) : of(null);\n        }));\n    }\n};\nAngularFireAuth = __decorate([\n    Injectable(),\n    __param(0, Inject(FIREBASE_OPTIONS)),\n    __param(1, Optional()), __param(1, Inject(FIREBASE_APP_NAME)),\n    __param(2, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [Object, Object, Object,\n        NgZone])\n], AngularFireAuth);\nexport { AngularFireAuth };\n"]}